name: 🔄 CI

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: 🔨 Build & 🔬 Test
    runs-on: windows-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔙 Get Previous Version
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: 🔧 Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: 📦 Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 📦 Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: 📡 Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

        # TODO: Workaround until https://github.com/SonarSource/sonar-scanner-msbuild/issues/1095 is closed
      - name: 🔧 Use .NET Core 5.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: 🔽 Start SonarCloud scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"iamdmitrij_Tethos" /o:"iamdmitrij" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="coverage/*.trx" /d:sonar.coverage.exclusions="test/**, demo/**"

        # TODO: Workaround until https://github.com/SonarSource/sonar-scanner-msbuild/issues/1095 is closed
      - name: 🔧 Use .NET Core 6.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: 🔩 Restore dependencies
        run: dotnet restore ./Tethos.sln

      - name: 🔨 Build
        run: dotnet build ./Tethos.sln --configuration Release --no-restore -p:Version=$(echo ${{ steps.previoustag.outputs.tag }} | tr -d 'v')

      - name: 🔬 Test
        run: dotnet test ./Tethos.sln --configuration Release --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx --results-directory ./coverage

        # TODO: Workaround until https://github.com/SonarSource/sonar-scanner-msbuild/issues/1095 is closed
      - name: 🔧 Use .NET Core 5.0 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: 🔼 End SonarCloud scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: 🔍 Coverage
        uses: codecov/codecov-action@v2
        with:
          verbose: true

      - name: 📚 Artifact Test Results
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: coverage/*.trx

      - name: 📚 Artifact NuGet
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: nuget-packages
          path: |
            src/**/Tethos*.nupkg
            src/**/Tethos*.snupkg
